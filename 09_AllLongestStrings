String[] allLongestStrings(String[] inputArray) {
    
    int size = 0; 
    int counter = 0 ; 
    
    for(int i = 0 ; i<inputArray.length;i++){
        if(inputArray[i].length()>size){
            size = inputArray[i].length();
            counter = 1; 
        }else if(inputArray[i].length()==size){
            counter++;
        }
    }
    System.out.println(size + " " + counter);
    
    int c2 = 0; 
    String[] result = new String[counter]; 
    for(int i=0;i<inputArray.length;i++){
        if(inputArray[i].length()==size){
            result[c2]=inputArray[i];
            c2++;
        }
    }

    return result;
}

/**
Given an array of strings, return another array containing all of its longest strings.

Example

For inputArray = ["aba", "aa", "ad", "vcd", "aba"], the output should be
allLongestStrings(inputArray) = ["aba", "vcd", "aba"].

Input/Output

[execution time limit] 3 seconds (java)

[input] array.string inputArray

A non-empty array.

Guaranteed constraints:
1 ≤ inputArray.length ≤ 10,
1 ≤ inputArray[i].length ≤ 10.

[output] array.string

Array of the longest strings, stored in the same order as in the inputArray.
**/
